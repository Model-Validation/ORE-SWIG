pipeline {
    agent any
    stages {
        stage ('Start') {
            steps {
                slackSend (color: '#FFFF00', message: "STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
            }
        }
        stage('Build Images') {
            steps {
                sh 'docker-compose -f Docker/docker-compose-ore.yml build --no-cache'
            }
        }
    }
    post {
        success {
            slackSend (color: '#00FF00', message: ":smiley: :thumbsup_all: SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }
        failure {
            slackSend (color: '#FF0000', message: ":angry: :thumbsdown: FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }
        always {
            sh 'docker ps -q -f status=exited | xargs --no-run-if-empty docker rm || true'
            sh 'docker images -q -f dangling=true | xargs --no-run-if-empty docker rmi || true'
        }
    }
}
