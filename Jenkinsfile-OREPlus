pipeline {
    agent any
    
    environment {
        ORE = '/home/jenkins/workspace/ORE_pipeline'
        PYTHON_INCLUDE_DIR = "/opt/anaconda3/include/python3.6m"
        PYTHON_LIBRARY = "/opt/anaconda3/lib/libpython3.6m.so"
        BOOST_ROOT = "/home/shared/boost_1_63_0"
        PYTHONPATH = "$workspace/OREPlus-SWIG/Python/build"
    }
    
    stages {
        stage ('Start') {
            steps {
                slackSend (color: '#FFFF00', message: "STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
            }
        }
        stage('Build') {
            steps {
                sh 'mkdir -p OREPlus-SWIG/Python/build'
                dir("OREPlus-SWIG/Python/build") {
                    sh 'cmake .. -DPYTHON_INCLUDE_DIR=$PYTHON_INCLUDE_DIR -DPYTHON_LIBRARY=$PYTHON_LIBRARY -DORE=$ORE -DBOOST_ROOT=$BOOST_ROOT'
                    sh 'make'
                }
            }
        }
        stage('Run Unit Tests') {
            steps {
                dir('QuantLib-SWIG/Python/test') {
                    sh '''python3 -c "import sys, OREPlus; sys.modules['QuantLib']=OREPlus;import QuantLibTestSuite;QuantLibTestSuite.test()"'''
                }
                dir('QuantExt-SWIG/Python/test') {
                    sh '''python3 -c "import sys, OREPlus; sys.modules['QuantExt']=OREPlus;import QuantExtTestSuite;QuantExtTestSuite.test()"'''
                }
                dir('OREData-SWIG/Python/test') {
                    sh '''python3 -c "import sys, OREPlus; sys.modules['OREData']=OREPlus;import OREDataTestSuite;OREDataTestSuite.test()"'''
                }
                dir('OREAnalytics-SWIG/Python/test') {
                    sh '''python3 -c "import sys, OREPlus; sys.modules['OREAnalytics']=OREPlus;import OREAnalyticsTestSuite;OREAnalyticsTestSuite.test()"'''
                }
                dir('OREPlus-SWIG/Python/test') {
                    sh 'python3 OREPlusTestSuite.py'
                }
            }
        }
    }
    post {
        success {
            slackSend (color: '#00FF00', message: ":smiley: :thumbsup_all: SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }
        failure {
            slackSend (color: '#FF0000', message: ":angry: :thumbsdown: FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }
        always {
            sh 'docker ps -q -f status=exited | xargs --no-run-if-empty docker rm || true'
            sh 'docker images -q -f dangling=true | xargs --no-run-if-empty docker rmi || true'
        }
    }
}