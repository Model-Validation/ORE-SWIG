===========================================
macos automake build using python distutils
===========================================

0) Patch QuantLib-SWIG
   daycounters.i: comment out the deprecated Actual365NoLeap

1) Edit oreplus-config to find QuantLib, QuantExt, OREData, OREAnalytics and OREPlus/App, e.g.
   line 3: prefix=/usr/local --> prefix=/Users/roland/Development/oremaster/QuantLib
   line 41: -I${prefix}/include --> -I${prefix}
   line 45: -L${exec_prefix}/lib --> -L${exec_prefix}/ql/.libs
   Copy oreplus-config to the system search path, e.g. /usr/local/bin
   This script is called by the subsequent build steps.

2) Patch Python/Makefile.am, line 12 (adding LDFLAGS)
   CXXFLAGS="$(CXXFLAGS) $(CXXWARNINGFLAGS)" CC="$(CC)" CXX="$(CXX)" LDFLAGS="$(LDFLAGS)" $(PYTHON) setup.py build

3) Run ./autogen.sh and configure
   ./configure CXXFLAGS="-O2 -std=c++11 -stdlib=libc++ -mmacosx-version-min=10.9" LDFLAGS="-stdlib=libc++ -mmacosx-version-min=10.9 -L$OREMASTER/QuantExt/qle/.libs -lQuantExt -L$OREMASTER/QuantLib/ql/.libs -lQuantLib -L$OREMASTER/OREData/ored/.libs -lOREData -L$OREMASTER/OREAnalytics/orea/.libs -lOREAnalytics -L$OREMASTER/OREPlus/App/orepapp/.libs -lOREPlusApp -L$BOOST/stage/lib -lboost_thread -lboost_system -lboost_serialization -lboost_date_time -lboost_regex -lboost_filesystem"

4) Build wrapper by invoking:
   make -C python

   Note: This performs essentially two steps
   - call "swig ..." to generate wrapper code (Python/OREPlus/oreplus_wrap.cpp and Python/OREPlus/OREPlus.py)
   - call "CC=... CXX=... CXXFLAGS=... LDFLAGS=... python setup.py build" to compile the cpp wrapper

5) Add Boost, QuantLib, QuantExt, OREData and OREAnalytics locations to the DYLD_LIBRARY_PATH, e.g. 
   export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:/Users/roland/Development/boost/boost_1_65_1/stage/lib:/Users/roland/Development/oremaster/QuantLib/ql/.libs:/Users/roland/Development/oremaster/QuantExt/qle/.libs:/Users/roland/Development/oremaster/OREData/ored/.libs:/Users/roland/Development/oremaster/OREAnalytics/orea/.libs

6) Run tests:
   cd Python
   python setup.py test

7) export PYTHONPATH=/Users/roland/Development/python/lib/python3.5/site-packages
   python setup.py install --prefix=/Users/roland/Development/python

8) Try examples (all work):
   cd examples
   python swap.py


windows
=======

1) Add Python INCLUDE and LIBRARY paths to the system environment if they do not exist, e.g. 
   SET PYTHON_INCLUDE="C:\Users\Danilo Delgado\AppData\Local\Continuum\anaconda3\include"
   SET PYTHON_LIB="C:\Users\Danilo Delgado\AppData\Local\Continuum\anaconda3\libs"
   
2) Add BOOST paths to the system environment, e.g. 
   SET BOOST=C:\repos\boost_1_65_1
   
   - if INCLUDE variable has already been set in the system environment, then run:
   SET INCLUDE=%INCLUDE%;%BOOST%
   - if INCLUDE variable has not been set in the system environment, then run:
   SET INCLUDE=%BOOST%

3) Add ORE path to the SYSTEM ENVIRONMENT, e.g. 
   SET ORE_DIR=C:\dev\openxva

4) Run the following python scripts to install QuantExt libraries:
   cd Python
   python setup.py wrap
   python setup.py build
   python setup.py install

5) Try examples (all work):
   cd examples
   python ore.py
   python swap.py
   python commodityforward.py


